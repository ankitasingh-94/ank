{"version":3,"sources":["../../src/services/Rhinoliner.js"],"names":["pushtoqueue","message","handler","queue","Queue","url","process","env","AWS_SQS_LINER_QUEUE_URL","longPollTimeout","maxMessagesPerRequest","isFifo","undefined","startPolling","date","Date","console","log","enqueue","orgId"],"mappings":";;;;;;;AAAA;;AACA;;AAGA;;AAGA;;;;;;AAJA;AAMA;AACO,SAASA,WAAT,CAAqBC,OAArB,EAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,KAAK,GAAG,IAAIC,cAAJ,CAAU;AACtBC,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,uBADK;AAEtBC,IAAAA,eAAe,EAAE,CAFK;AAGtBC,IAAAA,qBAAqB,EAAE,CAHD;AAItBC,IAAAA,MAAM,EAAE;AAJc,GAAV,CAAd;;AAMA,MAAIT,OAAO,KAAKU,SAAhB,EAA2B;AACzBT,IAAAA,KAAK,CAACU,YAAN,CAAmBX,OAAnB;AACD;;AACD,QAAMY,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,SAAOd,KAAK,CAACe,OAAN,CAAcjB,OAAd,EAAuB,SAAvB,EAAkC,KAAlC,EAAyCA,OAAO,CAACkB,KAAjD,CAAP;AACD","sourcesContent":["import fs from 'fs';\nimport crypto from 'crypto';\n\n// import * as logger from 'rhinotilities/lib/loggers/logger';\nimport Queue from 'rhinotilities/lib/objects/Queue';\n\n\nimport * as AWS from 'rhinotilities/lib/objects/AWS';\n\n// Used for checking if a sub object/nested object has ANY props/keys\nexport function pushtoqueue(message, handler) {\n  const queue = new Queue({\n    url: process.env.AWS_SQS_LINER_QUEUE_URL,\n    longPollTimeout: 5,\n    maxMessagesPerRequest: 5,\n    isFifo: true,\n  });\n  if (handler !== undefined) {\n    queue.startPolling(handler);\n  }\n  const date = new Date();\n  console.log('putting data to queue');\n  return queue.enqueue(message, 'inbound', 'job', message.orgId);\n}\n"],"file":"Rhinoliner.js"}