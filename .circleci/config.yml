defaults: &defaults
  working_directory: ~/app
  docker:
    - image: rhinogram/selenium-chrome:latest

version: 2
jobs:
  rhinomatic:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run: yarn
      - run:
          name: Set AWS Keys
          command: yarn rhinodeploy config
      - run:
          name: Get Secrets
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              configFile=prod.env
            elif [ "$CIRCLE_BRANCH" == "staging" ]; then
              configFile=staging.env
            else 
              configFile=dev.env
            fi
            yarn rhinodeploy envs -f $configFile -l ./src
      - run:
          name: Run Integration Tests
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]; then
              export APP_URL=https://app/rhinogram.com
              export NODE_ENV=production
              yarn test newOrgCanary
            elif [ "$CIRCLE_BRANCH" == "staging" ]; then
              export APP_URL=https://staging.rhinogram.com
              export NODE_ENV=staging
              yarn test newOrgCanary
            else
              export NODE_ENV=development
              export APP_URL=https://dev.dev-rhinogram.com
              yarn test
            fi
            
      - run:
          when: always
          name: Deploy Test Results
          command: |
            yarn && node deploy
            aws s3 sync \
              results \
              s3://rhinomatic-results-$CIRCLE_BRANCH/ \
              --acl public-read \
              --cache-control max-age=300 \
              --storage-class REDUCED_REDUNDANCY
            aws s3 sync \
              results \
              s3://rhinomatic-results-$CIRCLE_BRANCH/$CIRCLE_BUILD_NUM \
              --acl public-read \
              --cache-control max-age=300 \
              --storage-class REDUCED_REDUNDANCY
      - store_test_results:
          path: results/junit
      - store_artifacts:
          path: results
     

  test:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Yarn
          command: yarn
      - run:
          name: Lint
          command: yarn eslint .


workflows:
  version: 2

  nightly:
    triggers:
      - schedule:
          cron: '0 5 * * *'
          filters:
            branches:
              only:
                - develop
                - staging
    jobs:
      - rhinomatic

  merge:
    jobs:
      - rhinomatic:
          filters:
            branches:
              only:
                - develop
                - staging

  general:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - develop
                - staging
                - master
